
class Solution{ 
  private boolean findPages(int A[], int N, int M,int mid)
   {
       int student_count=1;
       int pagesum=0;
       for(int i=0;i<N;i++)
       {
           if(pagesum+A[i]<=mid)
           {
               pagesum += A[i];
           }
           else
           {
               student_count++;
               if(student_count>M || A[i]>mid)
               {
                   return false;
               }
               pagesum=A[i];
           }
       }
       return true;
   }
 //Function to find minimum number of pages.
 public  int findPages(int A[], int N, int M) 
   {   if(N<M)
       {
        return -1;    
       }
       int sum=0;
       //code here
       int start=0;
       for(int i=0;i<N;i++)
       {
           sum+=A[i];
           
       }
       int end=sum;
       int ans=0;
       while(start<=end)
       {   int mid=start+(end-start)/2;
           if(findPages(A, N,  M, mid))
           {
               ans=mid;
               end=mid-1;
           }
           else
           {
               start=mid+1;
           }
       }
       return ans;
   }
}



